#!/bin/bash

set -o nounset
set -o errexit
set -o pipefail
shopt -s lastpipe

if [[ $EUID -ne 0 ]]; then
  printf 'Must run as root!\n'
  exit 1
fi

BASE_DIR='/var/tmp/heckler'

REPORTS="${BASE_DIR}"/reports/"${1}"-"${2}"
CONF="${BASE_DIR}"/infra
VAR="${BASE_DIR}"/var

mkdir -p "${CONF}"
mkdir -p "${VAR}"

if [[ -e "${REPORTS}" ]]; then
  rm -rf "${REPORTS}"
fi
mkdir -p "${REPORTS}"

# puppet hacks
export FACTER_ipaddress=do_not_use
export RUBYLIB="${CONF}"/vendor/puppet/lib:"${CONF}"/vendor/facter/lib:"${CONF}"/vendor/hiera/lib:"${CONF}"/lib
export PATH="${CONF}"/vendor/puppet/bin:"${CONF}"/vendor/facter/bin:"${CONF}"/vendor/hiera/bin:$PATH

PUPPET_ARGS=(
  apply
  '--diff=diff'
  '--diff_args=-u'
  '--color=false'
  '--modulepath='"${CONF}"/modules:"${CONF}"/vendor/modules
  --confdir
  "${CONF}"
  --vardir
  "${VAR}"
  --logdest
  console
  --user
  jhathaway
  --group
  jhathaway
  --logdest
  syslog
  --storeconfigs
  --reports
  store
  nodes
)

# XXX detailed exit codes? ; ! (( $? & 4 ))"
# --detailed-exitcodes

pushd "${CONF}" >/dev/null
if [[ -e .git ]]; then
  git reset --hard
  git clean -fd
  echo XXX git fetch
else
  echo XXX git clone
fi
git log --no-merges --pretty=tformat:"%h" --reverse ^"${1}" "${2}" | mapfile -t COMMITS
popd >/dev/null

# add first commit to list
COMMITS=("${1}" "${COMMITS[@]}")

for commit in "${COMMITS[@]}"; do
  pushd "${CONF}" >/dev/null
  git checkout "${commit}" >/dev/null
  if [[ "$commit" == "${COMMITS[0]}" ]]; then
    puppet "${PUPPET_ARGS[@]}"
  fi
  report="${REPORTS}"/"${commit}"
  puppet "${PUPPET_ARGS[@]}" --noop | sed 's/\x1b\[[0-9;]*m//g' 2>&1 | tee "${report}".txt
  popd >/dev/null
  cp "${VAR}"/state/last_run_report.yaml "${report}".yaml
done

chmod o+rX "${REPORTS}"
printf 'World read set\n'
printf 'Report complete\n'
