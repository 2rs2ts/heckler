// Code generated by protoc-gen-go. DO NOT EDIT.
// source: report.proto

package puppetutil

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Event struct {
	Property             string   `protobuf:"bytes,1,opt,name=property,proto3" json:"property,omitempty"`
	PreviousValue        string   `protobuf:"bytes,2,opt,name=previous_value,json=previousValue,proto3" json:"previous_value,omitempty"`
	DesiredValue         string   `protobuf:"bytes,3,opt,name=desired_value,json=desiredValue,proto3" json:"desired_value,omitempty"`
	Message              string   `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Name                 string   `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Status               string   `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	CorrectiveChange     bool     `protobuf:"varint,7,opt,name=corrective_change,json=correctiveChange,proto3" json:"corrective_change,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eedb623aa6ca98c, []int{0}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetProperty() string {
	if m != nil {
		return m.Property
	}
	return ""
}

func (m *Event) GetPreviousValue() string {
	if m != nil {
		return m.PreviousValue
	}
	return ""
}

func (m *Event) GetDesiredValue() string {
	if m != nil {
		return m.DesiredValue
	}
	return ""
}

func (m *Event) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Event) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Event) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Event) GetCorrectiveChange() bool {
	if m != nil {
		return m.CorrectiveChange
	}
	return false
}

type Log struct {
	Level                string   `protobuf:"bytes,1,opt,name=level,proto3" json:"level,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Source               string   `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Log) Reset()         { *m = Log{} }
func (m *Log) String() string { return proto.CompactTextString(m) }
func (*Log) ProtoMessage()    {}
func (*Log) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eedb623aa6ca98c, []int{1}
}

func (m *Log) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Log.Unmarshal(m, b)
}
func (m *Log) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Log.Marshal(b, m, deterministic)
}
func (m *Log) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Log.Merge(m, src)
}
func (m *Log) XXX_Size() int {
	return xxx_messageInfo_Log.Size(m)
}
func (m *Log) XXX_DiscardUnknown() {
	xxx_messageInfo_Log.DiscardUnknown(m)
}

var xxx_messageInfo_Log proto.InternalMessageInfo

func (m *Log) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

func (m *Log) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Log) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

type PuppetReport struct {
	Host                 string                     `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	ConfigurationVersion string                     `protobuf:"bytes,2,opt,name=configuration_version,json=configurationVersion,proto3" json:"configuration_version,omitempty"`
	ReportFormat         int64                      `protobuf:"varint,3,opt,name=report_format,json=reportFormat,proto3" json:"report_format,omitempty"`
	PuppetVersion        string                     `protobuf:"bytes,4,opt,name=puppet_version,json=puppetVersion,proto3" json:"puppet_version,omitempty"`
	Status               string                     `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	TransactionCompleted bool                       `protobuf:"varint,6,opt,name=transaction_completed,json=transactionCompleted,proto3" json:"transaction_completed,omitempty"`
	Noop                 bool                       `protobuf:"varint,7,opt,name=noop,proto3" json:"noop,omitempty"`
	NoopPending          bool                       `protobuf:"varint,8,opt,name=noop_pending,json=noopPending,proto3" json:"noop_pending,omitempty"`
	Environment          string                     `protobuf:"bytes,9,opt,name=environment,proto3" json:"environment,omitempty"`
	Logs                 []*Log                     `protobuf:"bytes,10,rep,name=logs,proto3" json:"logs,omitempty"`
	ResourceStatuses     map[string]*ResourceStatus `protobuf:"bytes,11,rep,name=resource_statuses,json=resourceStatuses,proto3" json:"resource_statuses,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CorrectiveChange     bool                       `protobuf:"varint,12,opt,name=corrective_change,json=correctiveChange,proto3" json:"corrective_change,omitempty"`
	CachedCatalogStatus  string                     `protobuf:"bytes,13,opt,name=cached_catalog_status,json=cachedCatalogStatus,proto3" json:"cached_catalog_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *PuppetReport) Reset()         { *m = PuppetReport{} }
func (m *PuppetReport) String() string { return proto.CompactTextString(m) }
func (*PuppetReport) ProtoMessage()    {}
func (*PuppetReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eedb623aa6ca98c, []int{2}
}

func (m *PuppetReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PuppetReport.Unmarshal(m, b)
}
func (m *PuppetReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PuppetReport.Marshal(b, m, deterministic)
}
func (m *PuppetReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PuppetReport.Merge(m, src)
}
func (m *PuppetReport) XXX_Size() int {
	return xxx_messageInfo_PuppetReport.Size(m)
}
func (m *PuppetReport) XXX_DiscardUnknown() {
	xxx_messageInfo_PuppetReport.DiscardUnknown(m)
}

var xxx_messageInfo_PuppetReport proto.InternalMessageInfo

func (m *PuppetReport) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *PuppetReport) GetConfigurationVersion() string {
	if m != nil {
		return m.ConfigurationVersion
	}
	return ""
}

func (m *PuppetReport) GetReportFormat() int64 {
	if m != nil {
		return m.ReportFormat
	}
	return 0
}

func (m *PuppetReport) GetPuppetVersion() string {
	if m != nil {
		return m.PuppetVersion
	}
	return ""
}

func (m *PuppetReport) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *PuppetReport) GetTransactionCompleted() bool {
	if m != nil {
		return m.TransactionCompleted
	}
	return false
}

func (m *PuppetReport) GetNoop() bool {
	if m != nil {
		return m.Noop
	}
	return false
}

func (m *PuppetReport) GetNoopPending() bool {
	if m != nil {
		return m.NoopPending
	}
	return false
}

func (m *PuppetReport) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *PuppetReport) GetLogs() []*Log {
	if m != nil {
		return m.Logs
	}
	return nil
}

func (m *PuppetReport) GetResourceStatuses() map[string]*ResourceStatus {
	if m != nil {
		return m.ResourceStatuses
	}
	return nil
}

func (m *PuppetReport) GetCorrectiveChange() bool {
	if m != nil {
		return m.CorrectiveChange
	}
	return false
}

func (m *PuppetReport) GetCachedCatalogStatus() string {
	if m != nil {
		return m.CachedCatalogStatus
	}
	return ""
}

type ResourceStatus struct {
	ChangeCount          int64    `protobuf:"varint,1,opt,name=change_count,json=changeCount,proto3" json:"change_count,omitempty"`
	Changed              bool     `protobuf:"varint,2,opt,name=changed,proto3" json:"changed,omitempty"`
	ContainmentPath      []string `protobuf:"bytes,3,rep,name=containment_path,json=containmentPath,proto3" json:"containment_path,omitempty"`
	CorrectiveChange     bool     `protobuf:"varint,4,opt,name=corrective_change,json=correctiveChange,proto3" json:"corrective_change,omitempty"`
	Failed               bool     `protobuf:"varint,5,opt,name=failed,proto3" json:"failed,omitempty"`
	FailedToRestart      bool     `protobuf:"varint,6,opt,name=failed_to_restart,json=failedToRestart,proto3" json:"failed_to_restart,omitempty"`
	OutOfSync            bool     `protobuf:"varint,7,opt,name=out_of_sync,json=outOfSync,proto3" json:"out_of_sync,omitempty"`
	OutOfSyncCount       int64    `protobuf:"varint,8,opt,name=out_of_sync_count,json=outOfSyncCount,proto3" json:"out_of_sync_count,omitempty"`
	ProviderUsed         string   `protobuf:"bytes,9,opt,name=provider_used,json=providerUsed,proto3" json:"provider_used,omitempty"`
	Resource             string   `protobuf:"bytes,10,opt,name=resource,proto3" json:"resource,omitempty"`
	ResourceType         string   `protobuf:"bytes,11,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	Skipped              bool     `protobuf:"varint,12,opt,name=skipped,proto3" json:"skipped,omitempty"`
	Title                string   `protobuf:"bytes,13,opt,name=title,proto3" json:"title,omitempty"`
	Events               []*Event `protobuf:"bytes,14,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResourceStatus) Reset()         { *m = ResourceStatus{} }
func (m *ResourceStatus) String() string { return proto.CompactTextString(m) }
func (*ResourceStatus) ProtoMessage()    {}
func (*ResourceStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eedb623aa6ca98c, []int{3}
}

func (m *ResourceStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceStatus.Unmarshal(m, b)
}
func (m *ResourceStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceStatus.Marshal(b, m, deterministic)
}
func (m *ResourceStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceStatus.Merge(m, src)
}
func (m *ResourceStatus) XXX_Size() int {
	return xxx_messageInfo_ResourceStatus.Size(m)
}
func (m *ResourceStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceStatus proto.InternalMessageInfo

func (m *ResourceStatus) GetChangeCount() int64 {
	if m != nil {
		return m.ChangeCount
	}
	return 0
}

func (m *ResourceStatus) GetChanged() bool {
	if m != nil {
		return m.Changed
	}
	return false
}

func (m *ResourceStatus) GetContainmentPath() []string {
	if m != nil {
		return m.ContainmentPath
	}
	return nil
}

func (m *ResourceStatus) GetCorrectiveChange() bool {
	if m != nil {
		return m.CorrectiveChange
	}
	return false
}

func (m *ResourceStatus) GetFailed() bool {
	if m != nil {
		return m.Failed
	}
	return false
}

func (m *ResourceStatus) GetFailedToRestart() bool {
	if m != nil {
		return m.FailedToRestart
	}
	return false
}

func (m *ResourceStatus) GetOutOfSync() bool {
	if m != nil {
		return m.OutOfSync
	}
	return false
}

func (m *ResourceStatus) GetOutOfSyncCount() int64 {
	if m != nil {
		return m.OutOfSyncCount
	}
	return 0
}

func (m *ResourceStatus) GetProviderUsed() string {
	if m != nil {
		return m.ProviderUsed
	}
	return ""
}

func (m *ResourceStatus) GetResource() string {
	if m != nil {
		return m.Resource
	}
	return ""
}

func (m *ResourceStatus) GetResourceType() string {
	if m != nil {
		return m.ResourceType
	}
	return ""
}

func (m *ResourceStatus) GetSkipped() bool {
	if m != nil {
		return m.Skipped
	}
	return false
}

func (m *ResourceStatus) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ResourceStatus) GetEvents() []*Event {
	if m != nil {
		return m.Events
	}
	return nil
}

// The request message containing the git rev identifier, e.g. a tag or a
// commit id
type PuppetApplyRequest struct {
	Rev                  string   `protobuf:"bytes,1,opt,name=rev,proto3" json:"rev,omitempty"`
	Noop                 bool     `protobuf:"varint,2,opt,name=noop,proto3" json:"noop,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PuppetApplyRequest) Reset()         { *m = PuppetApplyRequest{} }
func (m *PuppetApplyRequest) String() string { return proto.CompactTextString(m) }
func (*PuppetApplyRequest) ProtoMessage()    {}
func (*PuppetApplyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eedb623aa6ca98c, []int{4}
}

func (m *PuppetApplyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PuppetApplyRequest.Unmarshal(m, b)
}
func (m *PuppetApplyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PuppetApplyRequest.Marshal(b, m, deterministic)
}
func (m *PuppetApplyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PuppetApplyRequest.Merge(m, src)
}
func (m *PuppetApplyRequest) XXX_Size() int {
	return xxx_messageInfo_PuppetApplyRequest.Size(m)
}
func (m *PuppetApplyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PuppetApplyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PuppetApplyRequest proto.InternalMessageInfo

func (m *PuppetApplyRequest) GetRev() string {
	if m != nil {
		return m.Rev
	}
	return ""
}

func (m *PuppetApplyRequest) GetNoop() bool {
	if m != nil {
		return m.Noop
	}
	return false
}

func init() {
	proto.RegisterType((*Event)(nil), "puppetutil.Event")
	proto.RegisterType((*Log)(nil), "puppetutil.Log")
	proto.RegisterType((*PuppetReport)(nil), "puppetutil.PuppetReport")
	proto.RegisterMapType((map[string]*ResourceStatus)(nil), "puppetutil.PuppetReport.ResourceStatusesEntry")
	proto.RegisterType((*ResourceStatus)(nil), "puppetutil.ResourceStatus")
	proto.RegisterType((*PuppetApplyRequest)(nil), "puppetutil.PuppetApplyRequest")
}

func init() { proto.RegisterFile("report.proto", fileDescriptor_3eedb623aa6ca98c) }

var fileDescriptor_3eedb623aa6ca98c = []byte{
	// 785 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x55, 0xcd, 0x6e, 0x1b, 0x37,
	0x10, 0xae, 0xbc, 0x92, 0x22, 0xcf, 0xca, 0x3f, 0x62, 0xed, 0x80, 0xf0, 0x21, 0x50, 0x65, 0x14,
	0xb0, 0x5b, 0x40, 0x28, 0xec, 0x4b, 0x91, 0x5b, 0x61, 0xa4, 0x40, 0x81, 0x14, 0x35, 0x98, 0x34,
	0x97, 0x1e, 0x16, 0xec, 0xee, 0x48, 0x5a, 0x64, 0x45, 0xb2, 0x24, 0x77, 0x01, 0xe5, 0x1d, 0xfa,
	0x92, 0x7d, 0x87, 0xde, 0x8b, 0x1d, 0x72, 0xad, 0x55, 0xe3, 0x9c, 0xc4, 0xf9, 0xbe, 0xd9, 0xe1,
	0xfc, 0x7c, 0x43, 0xc1, 0xd4, 0xa2, 0xd1, 0xd6, 0x2f, 0x8d, 0xd5, 0x5e, 0x33, 0x30, 0xb5, 0x31,
	0xe8, 0x6b, 0x5f, 0x56, 0x8b, 0x7f, 0x06, 0x30, 0x7a, 0xd3, 0xa0, 0xf2, 0xec, 0x0a, 0x26, 0xc6,
	0x6a, 0x83, 0xd6, 0xef, 0xf8, 0x60, 0x3e, 0xb8, 0x39, 0x16, 0x4f, 0x36, 0xfb, 0x16, 0x4e, 0x8d,
	0xc5, 0xa6, 0xd4, 0xb5, 0xcb, 0x1a, 0x59, 0xd5, 0xc8, 0x8f, 0xc8, 0xe3, 0xa4, 0x43, 0x3f, 0xb4,
	0x20, 0xbb, 0x86, 0x93, 0x02, 0x5d, 0x69, 0xb1, 0x88, 0x5e, 0x09, 0x79, 0x4d, 0x23, 0x18, 0x9c,
	0x38, 0xbc, 0xd8, 0xa2, 0x73, 0x72, 0x8d, 0x7c, 0x48, 0x74, 0x67, 0x32, 0x06, 0x43, 0x25, 0xb7,
	0xc8, 0x47, 0x04, 0xd3, 0x99, 0xbd, 0x84, 0xb1, 0xf3, 0xd2, 0xd7, 0x8e, 0x8f, 0x09, 0x8d, 0x16,
	0xfb, 0x1e, 0x66, 0xb9, 0xb6, 0x16, 0x73, 0x5f, 0x36, 0x98, 0xe5, 0x1b, 0xa9, 0xd6, 0xc8, 0x5f,
	0xcc, 0x07, 0x37, 0x13, 0x71, 0xbe, 0x27, 0x1e, 0x08, 0x5f, 0xfc, 0x0a, 0xc9, 0x5b, 0xbd, 0x66,
	0x17, 0x30, 0xaa, 0xb0, 0xc1, 0x2a, 0x96, 0x17, 0x8c, 0x7e, 0x3e, 0x47, 0x87, 0xf9, 0xb4, 0x77,
	0xeb, 0xda, 0xe6, 0x5d, 0x1d, 0xd1, 0x5a, 0xfc, 0x3d, 0x82, 0xe9, 0x23, 0xb5, 0x50, 0x50, 0x5b,
	0xdb, 0xc4, 0x37, 0xda, 0xf9, 0x18, 0x97, 0xce, 0xec, 0x1e, 0x2e, 0x73, 0xad, 0x56, 0xe5, 0xba,
	0xb6, 0xd2, 0x97, 0x5a, 0x65, 0x0d, 0x5a, 0x57, 0x6a, 0x15, 0x2f, 0xb9, 0x38, 0x20, 0x3f, 0x04,
	0xae, 0x6d, 0x60, 0x98, 0x54, 0xb6, 0xd2, 0x76, 0x2b, 0x3d, 0x5d, 0x9c, 0x88, 0x38, 0xbe, 0x9f,
	0x09, 0xa3, 0x61, 0xd0, 0xed, 0x4f, 0x21, 0x87, 0x71, 0x18, 0x84, 0x76, 0xb1, 0xf6, 0x9d, 0x1b,
	0x1d, 0x74, 0xee, 0x1e, 0x2e, 0xbd, 0x95, 0xca, 0xc9, 0x9c, 0xd2, 0xca, 0xf5, 0xd6, 0x54, 0xe8,
	0xb1, 0xa0, 0x06, 0x4f, 0xc4, 0x45, 0x8f, 0x7c, 0xe8, 0x38, 0x1a, 0x8d, 0xd6, 0x26, 0x76, 0x98,
	0xce, 0xec, 0x1b, 0x98, 0xb6, 0xbf, 0x99, 0x41, 0x55, 0x94, 0x6a, 0xcd, 0x27, 0xc4, 0xa5, 0x2d,
	0xf6, 0x18, 0x20, 0x36, 0x87, 0x14, 0x55, 0x53, 0x5a, 0xad, 0xb6, 0xa8, 0x3c, 0x3f, 0xa6, 0x44,
	0xfa, 0x10, 0xbb, 0x86, 0x61, 0xa5, 0xd7, 0x8e, 0xc3, 0x3c, 0xb9, 0x49, 0xef, 0xce, 0x96, 0x7b,
	0x69, 0x2e, 0xdf, 0xea, 0xb5, 0x20, 0x92, 0xfd, 0x01, 0x33, 0x8b, 0xa1, 0xf9, 0x59, 0xa8, 0x02,
	0x1d, 0x4f, 0xe9, 0x8b, 0x65, 0xff, 0x8b, 0xfe, 0x50, 0x96, 0x22, 0x7e, 0xf1, 0x2e, 0x7e, 0xf0,
	0x46, 0x79, 0xbb, 0x13, 0xe7, 0xf6, 0x7f, 0xf0, 0xf3, 0x4a, 0x9a, 0x3e, 0xaf, 0x24, 0x76, 0x07,
	0x97, 0xb9, 0xcc, 0x37, 0x58, 0x64, 0xb9, 0xf4, 0xb2, 0xd2, 0xeb, 0x98, 0x0f, 0x3f, 0xa1, 0xd2,
	0xbe, 0x0e, 0xe4, 0x43, 0xe0, 0xc2, 0x15, 0x57, 0x19, 0x5c, 0x3e, 0x9b, 0x0b, 0x3b, 0x87, 0xe4,
	0x23, 0x76, 0xcb, 0xd6, 0x1e, 0xd9, 0x0f, 0x30, 0xda, 0xaf, 0x57, 0x7a, 0x77, 0xd5, 0x2f, 0xee,
	0x30, 0x86, 0x08, 0x8e, 0xaf, 0x8f, 0x7e, 0x1c, 0x2c, 0xfe, 0x4d, 0xe0, 0xf4, 0x90, 0x6d, 0x67,
	0x13, 0x2a, 0xc9, 0x72, 0x5d, 0xab, 0xa0, 0xcc, 0x44, 0xa4, 0x01, 0x7b, 0x68, 0xa1, 0x56, 0xf7,
	0xc1, 0x2c, 0xe8, 0xb6, 0x89, 0xe8, 0x4c, 0x76, 0x0b, 0xe7, 0xb9, 0x56, 0x5e, 0x96, 0x34, 0xa2,
	0xcc, 0x48, 0xbf, 0xe1, 0xc9, 0x3c, 0xb9, 0x39, 0x16, 0x67, 0x3d, 0xfc, 0x51, 0xfa, 0xcd, 0xf3,
	0xcd, 0x1b, 0x7e, 0xa1, 0x79, 0x2f, 0x61, 0xbc, 0x92, 0x65, 0x85, 0x05, 0x29, 0x72, 0x22, 0xa2,
	0xc5, 0xbe, 0x83, 0x59, 0x38, 0x65, 0x5e, 0x67, 0x16, 0x9d, 0x97, 0xd6, 0x47, 0x35, 0x9e, 0x05,
	0xe2, 0xbd, 0x16, 0x01, 0x66, 0xaf, 0x20, 0xd5, 0xb5, 0xcf, 0xf4, 0x2a, 0x73, 0x3b, 0x95, 0x47,
	0x3d, 0x1e, 0xeb, 0xda, 0xff, 0xb6, 0x7a, 0xb7, 0x53, 0x39, 0xbb, 0x85, 0x59, 0x8f, 0x8f, 0xd5,
	0x4f, 0xa8, 0xfa, 0xd3, 0x27, 0xaf, 0xd0, 0x80, 0x6b, 0x38, 0x31, 0x56, 0x37, 0x65, 0x81, 0x36,
	0xab, 0x1d, 0x16, 0x51, 0x9e, 0xd3, 0x0e, 0xfc, 0xdd, 0x61, 0xd1, 0xbe, 0x8a, 0x9d, 0x62, 0x38,
	0x84, 0x57, 0xb1, 0xb3, 0xc3, 0xb6, 0x46, 0x59, 0xfa, 0x9d, 0x41, 0x9e, 0x86, 0x00, 0x1d, 0xf8,
	0x7e, 0x67, 0xe8, 0xb9, 0x73, 0x1f, 0x4b, 0x63, 0xb0, 0x88, 0xa2, 0xea, 0xcc, 0xf6, 0x39, 0xf2,
	0xa5, 0xaf, 0x30, 0x6a, 0x27, 0x18, 0xec, 0x16, 0xc6, 0xd8, 0xbe, 0xc7, 0x8e, 0x9f, 0x92, 0xc0,
	0x67, 0x7d, 0x0d, 0xd0, 0x4b, 0x2d, 0xa2, 0xc3, 0xe2, 0x35, 0xb0, 0xa0, 0xf8, 0x9f, 0x8c, 0xa9,
	0x76, 0x02, 0xff, 0xaa, 0xd1, 0xf9, 0x56, 0x55, 0x16, 0x9b, 0x4e, 0x55, 0x16, 0x9b, 0xa7, 0xe5,
	0x3d, 0xda, 0x2f, 0xef, 0x9d, 0x80, 0x91, 0x28, 0x3f, 0x7d, 0xd2, 0xec, 0x17, 0x48, 0x7b, 0x41,
	0xd8, 0xab, 0xcf, 0xf7, 0xa9, 0x1f, 0xfd, 0x8a, 0x7f, 0x69, 0xdf, 0x16, 0x5f, 0xfd, 0x39, 0xa6,
	0xbf, 0x97, 0xfb, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0xbc, 0x23, 0x6f, 0x39, 0x6e, 0x06, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RizzoClient is the client API for Rizzo service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RizzoClient interface {
	// applies a ref
	PuppetApply(ctx context.Context, in *PuppetApplyRequest, opts ...grpc.CallOption) (*PuppetReport, error)
}

type rizzoClient struct {
	cc *grpc.ClientConn
}

func NewRizzoClient(cc *grpc.ClientConn) RizzoClient {
	return &rizzoClient{cc}
}

func (c *rizzoClient) PuppetApply(ctx context.Context, in *PuppetApplyRequest, opts ...grpc.CallOption) (*PuppetReport, error) {
	out := new(PuppetReport)
	err := c.cc.Invoke(ctx, "/puppetutil.Rizzo/PuppetApply", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RizzoServer is the server API for Rizzo service.
type RizzoServer interface {
	// applies a ref
	PuppetApply(context.Context, *PuppetApplyRequest) (*PuppetReport, error)
}

// UnimplementedRizzoServer can be embedded to have forward compatible implementations.
type UnimplementedRizzoServer struct {
}

func (*UnimplementedRizzoServer) PuppetApply(ctx context.Context, req *PuppetApplyRequest) (*PuppetReport, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PuppetApply not implemented")
}

func RegisterRizzoServer(s *grpc.Server, srv RizzoServer) {
	s.RegisterService(&_Rizzo_serviceDesc, srv)
}

func _Rizzo_PuppetApply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PuppetApplyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RizzoServer).PuppetApply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/puppetutil.Rizzo/PuppetApply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RizzoServer).PuppetApply(ctx, req.(*PuppetApplyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Rizzo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "puppetutil.Rizzo",
	HandlerType: (*RizzoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PuppetApply",
			Handler:    _Rizzo_PuppetApply_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "report.proto",
}
