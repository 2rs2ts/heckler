#!/bin/bash

set -o nounset
set -o errexit
set -o pipefail
shopt -s lastpipe

if [[ $EUID -ne 0 ]]; then
  printf 'Must run as root!\n'
  exit 1
fi

export PATH=/opt/puppetlabs/bin:$PATH
REPO='muppetshow'

pushd "${PWD}"/"${REPO}" >/dev/null
git log --pretty=tformat:"%H" --reverse ^"${1}" "${2}" | mapfile -t COMMITS
v1_hash="$(git rev-parse "${1}")"
popd >/dev/null

# add first commit to list
COMMITS=("${v1_hash}" "${COMMITS[@]}")

MUPPETS=(
  waldorf
  statler
  fozzie
)

PP_ARGS=(
  --confdir
  "${PWD}"/"${REPO}"
  --vardir
  "${PWD}/var"
)

if [[ -e reports ]]; then
  rm -rf reports
fi

mkdir -p reports

FACTER_nodename='fozzie' FACTER_cwd="${PWD}" \
  puppet apply "${PP_ARGS[@]}" manifests/reset.pp

for muppet in "${MUPPETS[@]}"; do
  mkdir -p reports/"${muppet}"
  for commit in "${COMMITS[@]}"; do
    pushd "${PWD}"/"${REPO}" >/dev/null
    git checkout "${commit}" >/dev/null
    popd >/dev/null
    if [[ "$commit" == "${COMMITS[0]}" ]]; then
      FACTER_nodename="${muppet}" FACTER_cwd="${PWD}" \
        puppet apply --config_version "${commit}" "${PP_ARGS[@]}" "${REPO}"/nodes.pp
    fi
    report=reports/"${muppet}"/"${commit}"
    FACTER_nodename="${muppet}" FACTER_cwd="${PWD}" \
      puppet apply --noop --config_version "${commit}" "${PP_ARGS[@]}" "${REPO}"/nodes.pp >"${report}".txt 2>&1
    cp var/state/last_run_report.yaml "${report}".yaml
    chmod +r "${report}".yaml
    sed -i 's/^host: .*/host: '"${muppet}"'/' "${report}".yaml
  done
done

printf 'Set world read\n'
printf 'Done\n'
